<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:stream="http://www.springframework.org/schema/integration/stream"
	xmlns:mail="http://www.springframework.org/schema/integration/mail"
	xmlns:ws="http://www.springframework.org/schema/integration/ws"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:http="http://www.springframework.org/schema/integration/http"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream-4.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/integration/jdbc http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc-3.0.xsd
		http://www.springframework.org/schema/integration/mail http://www.springframework.org/schema/integration/mail/spring-integration-mail.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/integration/ws http://www.springframework.org/schema/integration/ws/spring-integration-ws.xsd
		http://www.springframework.org/schema/integration/http http://www.springframework.org/schema/integration/http/spring-integration-http-4.1.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-4.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/pizzabox" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>
	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.pizzabox.common.model" />

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>
	
	
	<int:channel id="paymentRequestChannel" />
	<int:channel id="paymentReplyChannel" />
	<int:channel id="cashChannel" />
	<int:channel id="onlineChannel" />
	<int:channel id="outputChannel" />
	<int:channel id="jdbcOutChannel" />
	<int:channel id="jsonOutchannel" />

	<!-- Entry point -->
	<int:gateway id="paymentGateway" service-interface="com.payment.gateway.PaymentGateway"
		default-request-channel="paymentRequestChannel" default-reply-channel="paymentReplyChannel" />

	<!-- Route to either cash or online channel -->
	<int:router input-channel="paymentRequestChannel">
		<bean id="paymentModeRouter" class="com.payment.router.PaymentModeRouter" />
	</int:router>

	<int:chain input-channel="onlineChannel">
		<!-- Add content-type header for messages to be routed to online channel -->
		<int:header-enricher>
			<int:header name="Content-Type" value="application/json" />
		</int:header-enricher>

		<!-- Call the REST web service to fulfill the payment functionality -->
		<http:outbound-gateway
			url="http://localhost:8080/payment/paypal/makepayment" http-method="POST"
			expected-response-type="java.lang.String" />

	</int:chain>
	
	<int-jdbc:outbound-gateway
		request-channel="cashChannel" data-source="dataSource" reply-channel="jdbcOutChannel"
		update="update item set name='TEST' where item_id=1" query="select * from item where item_id=1"/>
		
	<int:object-to-string-transformer input-channel="jdbcOutChannel" output-channel="paymentReplyChannel"/>

</beans>
